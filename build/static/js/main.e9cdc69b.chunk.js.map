{"version":3,"sources":["components/certGen/navBar.js","components/certGen/body/addEvent.js","lib/postJson.js","components/certGen/body/home.js","components/certGen/body/sendCerts.js","components/certGen/body/index.js","components/certGen/certGen.js","components/certGen/index.js","components/login/login.js","components/login/index.js","components/error/Error404.js","PrivateRoutes.js","firebase.js","App.js","store/auth/reducer.js","store/rootReducer.js","index.js","store/persistenceFuncs.js"],"names":["NavBar","userState","signOut","name","onClick","AddEvent","setBodyState","eventNameRef","useRef","useState","Date","startDate","setStartDate","type","ref","placeholder","selected","onChange","date","e","url","data","preventDefault","eventName","current","value","axios","post","JSON","stringify","headers","then","console","log","catch","err","Home","downloadCsvTemplate","templateName","method","responseType","response","FileDownload","SendCerts","templateRef","fileRef","recipientTypeRef","eventList","setEventList","loading","setLoading","fileError","setFileError","resError","setResError","useEffect","get","res","onSubmit","files","formData","FormData","append","status","disabled","map","event","id","includes","Body","bodyState","CertGen","auth","useSelector","state","firebase","useFirestoreConnect","collection","doc","uid","history","useHistory","useFirebase","firestoreState","firestore","role","picture","setUserState","users","user","interceptors","request","use","a","config","currentUser","getIdToken","idToken","error","Promise","reject","logout","push","Login","buttonDisabled","setButtonDisabled","credentialError","setCredentialError","emailVal","passwordVal","className","loginStyles","container","loginTextHeader","required","login","email","process","password","handleLoginButtonClick","Error404","AuthenticatedOnlyRoute","children","rest","isLoaded","isEmpty","render","to","UnAuthenticatedRoute","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","dispatch","useDispatch","firebase_FIREBASE","onAuthStateChanged","exact","path","component","initialState","reducer","action","combineReducers","authReducer","firebaseReducer","firestoreReducer","persistedState","serializedState","localStorage","getItem","parse","getFromLocalStorage","store","createStore","rootReducer","subscribe","setItem","setToLocalStorage","getState","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9cdc69b.chunk.js","sourcesContent":["const NavBar = ({userState, signOut}) => {\n    return (\n        <div>\n            <div>Hello, {userState.name}.</div>\n            <button onClick={signOut}>Sign Out</button>\n        </div>\n    )\n}\n\nexport default NavBar;\n","import {useRef, useState} from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {postJson} from \"../../../lib/postJson\";\n\n\nconst AddEvent = ({setBodyState}) => {\n    const eventNameRef = useRef(\"\");\n    const [startDate, setStartDate] = useState(new Date());\n    const handleAddEventSubmission = (e) => {\n        e.preventDefault();\n        postJson('/private/event/add', {startDate, eventName: eventNameRef.current.value});\n    }\n\n\n    return (\n        <div>\n            <div>\n                <input type=\"text\" ref={eventNameRef} placeholder={\"enter event name\"} />\n                <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n                <button type={\"submit\"} onClick={handleAddEventSubmission}>Add</button>\n            </div>\n            <button onClick={() => setBodyState('root')}>Back</button>\n        </div>\n    );\n};\n\nexport default AddEvent;\n","import axios from \"axios\";\n\nexport const postJson = (url, data) => {\n    const headerConfig = {\n        'Content-Type': 'application/JSON'\n    };\n\n    axios.post(url,\n        JSON.stringify(data), {headers: headerConfig})\n        .then(() => {\n            console.log('POST JSON request sent')\n        })\n        .catch((err) => {\n            console.log('POST JSON unable to send request');\n        });\n};\n\n","import axios from \"axios\";\nimport FileDownload from 'js-file-download';\n\n\nconst Home = ({setBodyState}) => {\n\n    const downloadCsvTemplate = (templateName) => {\n        axios({\n            method: 'get',\n            url: `/private/csv-template/${templateName}`,\n            responseType: 'blob',\n        })\n            .then((response) => {\n                FileDownload(response.data, `${templateName}.csv`);\n            });\n    };\n\n\n    return (\n        <div>\n            <div>\n                <button onClick={() => downloadCsvTemplate(\"coordinators\")}>Download coordinators CSV Template</button>\n                <button onClick={() => downloadCsvTemplate(\"participants\")}>Download participants CSV Template</button>\n                <button onClick={() => downloadCsvTemplate(\"winners\")}>Download winners CSV Template</button>\n            </div>\n            <div>\n                <button onClick={() => setBodyState(\"eventAdd\")}>Add an Event</button>\n            </div>\n            <div>\n                <button onClick={() => setBodyState(\"sendCerts\")}>Mail Certificates</button>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Home;\n","import {useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {postJson} from '../../../lib/postJson';\n\n\nconst SendCerts = ({setBodyState}) => {\n    const eventNameRef = useRef(null);\n    const templateRef = useRef(null);\n    const fileRef = useRef(null);\n    const recipientTypeRef = useRef(null);\n    const [eventList, setEventList] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [fileError, setFileError] = useState(0);\n    const [resError, setResError] = useState(null);\n\n    /*\n    * fileError - 0 - No error at all\n    * fileError - 1 - File not added\n    * fileError - 2 - Unsupported file format\n    * fileError - 3 - File size larger than expected\n    * TODO: Add File size larger error\n    * */\n\n    useEffect(() => {\n        axios.get('private/event/fetch-all')\n            .then((res) => {\n                setEventList(res.data);\n                setLoading(false);\n            })\n            .catch((err) => {\n                console.log('Error occurred' + err);\n            })\n    }, []);\n\n    const formSubmitHandler = (e) => {\n        e.preventDefault();\n        if (fileRef.current.files[0] === null) {\n            setFileError(1);\n        }\n        setFileError(0)\n        const formData = new FormData();\n        formData.append('eventID', eventNameRef.current.value);\n        formData.append('templateType', templateRef.current.value);\n        formData.append('recipientType', recipientTypeRef.current.value);\n        formData.append('file', fileRef.current.files[0]);\n        axios.post('/private/send', formData)\n            .then((res) => {\n                switch (res.status) {\n                    case 415:\n                        setResError(res.data);\n                        break;\n                    case 500:\n                        setResError(res.data);\n                        break;\n                    default:\n                        setResError(null);\n                        break;\n                }\n            })\n            .catch(err => {\n                console.log(\"error occurred while sending form\");\n            });\n    }\n\n    const fileChangeHandler = () => {\n        setFileError(0);\n        if (fileRef.current.files[0].type !== 'text/csv') {\n            setFileError(2);\n            fileRef.current.value = \"\";\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={formSubmitHandler}>\n                <label>\n                    Choose the event:\n                    <select ref={eventNameRef} name={\"eventName\"} disabled={loading}>\n                        {(eventList !== null) ? eventList.map((event) => <option key={event.id} value={event.id}>{event.eventName}</option>) : <option>loading</option>}\n                    </select>\n                </label>\n                <label>\n                    Choose a Template:\n                    <select ref={templateRef} name={\"templateName\"}>\n                        <option value={\"SB Template\"}>SB Template</option>\n                        <option value={\"CS Template\"}>CS Template</option>\n                        <option value={\"IAS Template\"}>IAS Template</option>\n                        <option value={\"WIE Template\"}>WIE Template</option>\n                    </select>\n                </label>\n                <label>\n                    Certificate for:\n                    <select ref={recipientTypeRef} name={\"recipientType\"}>\n                        <option value={\"Coordinators\"}>Coordinators</option>\n                        <option value={\"Volunteers\"}>Volunteers</option>\n                        <option value={\"Participants\"}>Participants</option>\n                        <option value={\"Winners\"}>Winners</option>\n                    </select>\n                </label>\n                <label>\n                    <input type=\"file\" name={\"uploadedFile\"} ref={fileRef} onChange={fileChangeHandler} />\n                    <p>{fileError === 2 ? \"Unsupported file format\" : null}</p>\n                </label>\n                {resError?<p>CSV File Poorly formatted</p>:null}\n                <input type=\"submit\" name={\"Send\"} disabled={([1, 2].includes(fileError))}/>\n            </form>\n            <button onClick={() => setBodyState('root')}>Back</button>\n        </div>\n    );\n};\n\nexport default SendCerts;\n","import {useState} from \"react\";\nimport AddEvent from \"./addEvent\";\nimport Home from \"./home\";\nimport SendCerts from \"./sendCerts\";\n\nconst Body = () => {\n    const [bodyState, setBodyState] = useState(\"root\");\n\n    return (\n        (bodyState === \"eventAdd\")?\n            <AddEvent setBodyState={setBodyState} />:\n            ((bodyState === \"root\")?\n                <Home setBodyState={setBodyState} />:\n                <SendCerts setBodyState={setBodyState} />)\n    );\n}\n\nexport default Body;\n","import {Redirect, useHistory} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {useFirebase, isLoaded, useFirestoreConnect, isEmpty,} from \"react-redux-firebase\";\nimport {useEffect, useState} from \"react\";\nimport axios from 'axios';\n\nimport NavBar from \"./navBar\";\nimport Body from \"./body/index\";\n\nconst CertGen = () => {\n    const auth = useSelector(state => state.firebase.auth);\n    useFirestoreConnect({\n        collection: 'users',\n        doc: auth.uid\n    })\n    const history = useHistory();\n    const firebase = useFirebase();\n    const firestoreState = useSelector(state => state.firestore)\n    const [userState, setUserState] = useState({\n        name: \"\",\n        role: \"\",\n        picture: \"\"\n    });\n\n\n    // TODO: Redirect to CertGen if null\n    useEffect(() => {\n        console.log(\"insiude useEffect\")\n        if (firestoreState) {\n            if (firestoreState.data) {\n                if (firestoreState.data.users) {\n                    if (firestoreState.data.users[auth.uid]) {\n                        const user = firestoreState.data.users[auth.uid];\n                        setUserState({\n                            name: user.name,\n                            role: user.role,\n                            picture: user.picture\n                        })\n                    }\n                }\n            }\n        }\n    }, [])\n\n    axios.interceptors.request.use(async config => {\n        config.headers.idToken = await firebase.auth().currentUser.getIdToken()\n        return config\n    }, (error) => {\n        return Promise.reject(error)\n    })\n\n\n    useFirestoreConnect({\n        collection: 'users',\n        doc: auth.uid\n    })\n\n\n    const signOut = () => {\n        firebase.logout()\n            .then(() => {\n                history.push('/login');\n            })\n            .catch((err) => {\n                //TODO: handle logout error\n            })\n    };\n\n\n    return (\n        <div>\n            <NavBar userState={userState} signOut={signOut} />\n            <Body />\n        </div>\n    );\n}\n\n\nexport default CertGen;\n","import CertGen from \"./certGen\";\n\n\nexport default () => {\n    return (\n        <CertGen />\n    );\n}\n","import loginStyles from \"./styles/loginStyles.module.css\";\nimport {useRef, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {useHistory} from 'react-router-dom';\nimport {useFirebase} from \"react-redux-firebase\";\nimport {isLoaded, isEmpty} from \"react-redux-firebase\";\n\n\nconst Login = () => {\n    const [buttonDisabled, setButtonDisabled] = useState(false);\n    const [credentialError, setCredentialError] = useState(null);\n    const emailVal = useRef(null);\n    const passwordVal = useRef(null);\n    const history = useHistory();\n    const firebase = useFirebase();\n\n    // TEST: delete it after use\n    const auth = useSelector(state => state.firebase.auth);\n\n\n    const verifyEmailAndPassword = () => {\n        if (emailVal.current.value === \"\" || passwordVal.current.value === \"\") {\n            setCredentialError(\"Please Enter Email and password\")\n            return 0;\n        }\n        return 1;\n    };\n\n\n    const handleLoginButtonClick = (e) => {\n        e.preventDefault();\n        setButtonDisabled(true);\n\n        // TEST\n        if (true || verifyEmailAndPassword()) {\n            firebase.login({email: process.env.REACT_APP_TEST_EMAIL, password: process.env.REACT_APP_TEST_PWORD})\n                .then((user) => {\n                    history.push('/');\n                })\n                .catch((err) => {\n                    setCredentialError(err);\n                    emailVal.current.value = \"\";\n                    passwordVal.current.value = \"\";\n                    setButtonDisabled(false);\n                });\n        }\n    };\n\n\n    return (\n        <div className={loginStyles.container}>\n            <div className={loginStyles.loginTextHeader}>Login</div>\n            <input type=\"text\" ref={emailVal} placeholder={'email'} required />\n            <input type=\"password\" ref={passwordVal} placeholder={'password'} required />\n            <div>{credentialError}</div>\n            <button disabled={buttonDisabled} onClick={(e) => handleLoginButtonClick(e)}>Log In</button>\n            {/*{isLoaded(auth)?<p>Auth is loaded</p>:<p>auth is not loaded</p>}*/}\n            {/*{!isEmpty(auth)?<p>User is authenticated</p>:<p>user is not authenticated</p>}*/}\n        </div>\n    );\n};\n\n\nexport default Login;\n","import Login from \"./login\";\n\nexport default () => {\n    return (\n        <Login />\n    );\n}\n","import errorStyles from \"./styles/errorStyles.module.css\";\n\nconst Error404 = () => {\n    return <div>\n        error 404 Not found\n    </div>\n}\n\n\nexport default Error404;\n","import {Redirect, Route} from \"react-router-dom\";\nimport {isLoaded, isEmpty} from \"react-redux-firebase\";\nimport {useSelector} from \"react-redux\";\n\n\n// TODO: Add isEmpty(auth) in the conditional statement\n\nexport const AuthenticatedOnlyRoute = ({children, ...rest}) => {\n    const auth = useSelector(state => state.firebase.auth);\n\n    console.log(isLoaded(auth)?\"Auth is loaded\":\"auth is not loaded\")\n    console.log(!isEmpty(auth)?\"User is authenticated\":\"user is not authenticated\");\n\n\n    return (\n        <Route {...rest}\n        render={() => {\n            if (isLoaded(auth)) {\n                console.log(\"reached here\")\n                if (isEmpty(auth)) return <Redirect to={'/login'} />\n                else return (children)\n            }\n            else {\n                return <div>loading</div>\n            }\n        }}\n        />\n    )\n};\n\nexport const UnAuthenticatedRoute = ({children, ...rest}) => {\n    const auth = useSelector(state => state.firebase.auth);\n\n    console.log(isLoaded(auth)?\"Auth is loaded\":\"auth is not loaded\")\n    console.log(!isEmpty(auth)?\"User is authenticated\":\"user is not authenticated\");\n\n\n    return (\n        <Route {...rest}\n               render={() => {\n                   if (isLoaded(auth)) {\n                       if (!isEmpty(auth)) return <Redirect to={'/'} />\n                       else return (children)\n                   }\n                   else {\n                       return <div>loading</div>\n                   }\n               }}\n        />\n    )\n};\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n\nfirebase.initializeApp({\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n});\n\n// export const user = app.user();\n// export const sql = app.firestore();\nfirebase.auth();\nfirebase.firestore();\n\n\nexport default firebase;\n","import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport CertGen from \"./components/certGen\";\nimport Login from \"./components/login\";\nimport Error404 from \"./components/error/Error404\";\nimport {AuthenticatedOnlyRoute, UnAuthenticatedRoute} from \"./PrivateRoutes\";\nimport {useEffect} from \"react\";\nimport firebase_FIREBASE from \"./firebase\";\nimport {useDispatch} from \"react-redux\";\n\n\nfunction App () {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        firebase_FIREBASE.auth().onAuthStateChanged((user) => {\n            dispatch({type: 'SET_UID', uid: (user)?user.uid:null});\n        })\n    }, []);\n\n\n    return (\n        <Router>\n            <Switch>\n                {/*<Route exact path={'/'} component={CertGen} />*/}\n                <AuthenticatedOnlyRoute exact path={\"/\"}>\n                    <Route component={CertGen} />\n                </AuthenticatedOnlyRoute>\n                {/*<Route path={\"/login\"} component={Login} />*/}\n                <UnAuthenticatedRoute path={\"/login\"}>\n                    <Route component={Login} />\n                </UnAuthenticatedRoute>\n                <Route component={Error404} />\n            </Switch>\n        </Router>\n    );\n}\n\n\nexport default App;\n","const initialState = {\n    uid: null,\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case 'SET_UID':\n            return {\n                ...state,\n                uid: action.uid,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;\n","import {combineReducers} from 'redux';\nimport {firebaseReducer} from \"react-redux-firebase\";\nimport {firestoreReducer} from \"redux-firestore\";\nimport authReducer from \"./auth/reducer\";\n\nexport default combineReducers({\n   auth: authReducer,\n   firebase: firebaseReducer,\n   firestore: firestoreReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport rootReducer from \"./store/rootReducer\";\nimport {createFirestoreInstance} from \"redux-firestore\";\nimport {ReactReduxFirebaseProvider} from \"react-redux-firebase\";\nimport firebase  from \"./firebase\";\nimport {setToLocalStorage, getFromLocalStorage} from \"./store/persistenceFuncs\";\n\n\nconst rrfConfig = {\n    userProfile: \"users\",\n    useFirestoreForProfile: true,\n};\n\n\nconst persistedState = getFromLocalStorage();\nconst store = createStore(rootReducer, persistedState);\n\nstore.subscribe(() => setToLocalStorage(store.getState()));\n\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n};\n\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <React.StrictMode>\n                    <App />\n                </React.StrictMode>\n            </ReactReduxFirebaseProvider>\n    </Provider>,\n  document.getElementById('root')\n);\n","export const setToLocalStorage = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState)\n        return state;\n    } catch (err) {\n        // TODO: Handle this\n    }\n}\n\nexport const getFromLocalStorage = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) return undefined;\n        return JSON.parse(serializedState);\n    } catch (err) {\n        // TODO: Handle this\n    }\n}\n"],"sourceRoot":""}