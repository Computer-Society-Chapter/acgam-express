{"version":3,"sources":["components/home/navBar.js","components/home/body/addEvent.js","components/home/body/home.js","components/error/networkError.js","components/home/body/sendingCerts.js","components/home/body/confirmBox.js","components/home/body/sendCerts.js","components/home/body/index.js","components/home/certGen.js","components/home/index.js","components/login/login.js","components/login/index.js","components/error/Error404.js","PrivateRoutes.js","firebase.js","App.js","store/auth/reducer.js","store/rootReducer.js","index.js","store/persistenceFuncs.js"],"names":["NavBar","userState","signOut","name","onClick","AddEvent","setBodyState","eventNameRef","useRef","useState","Date","startDate","setStartDate","loading","setLoading","addEventStatus","setAddEventStatus","networkStatus","setNetworkStatus","type","ref","placeholder","selected","onChange","date","e","preventDefault","axios","post","JSON","stringify","eventName","current","value","headers","then","res","status","catch","err","Home","downloadCsvTemplate","templateName","method","url","responseType","response","FileDownload","data","NetworkError","SendingCerts","socket","setSendingCertsFlag","log","ConfirmBox","event","formSubmitHandler","setConfirmBoxFlag","SendCerts","templateRef","fileRef","eventList","setEventList","fileError","setFileError","submitDisabled","setSubmitDisabled","resError","setResError","resOkay","setResOkay","loadEventsStatus","setLoadEventsStatus","sendingCertsFlag","confirmBoxFlag","formEvent","setFormEvent","setLog","useEffect","get","reverse","console","onSubmit","disabled","map","id","files","includes","SocketIOClient","formData","FormData","append","on","msg","disconnect","Body","bodyState","CertGen","auth","useSelector","state","firebase","useFirestoreConnect","collection","doc","uid","history","useHistory","useFirebase","firestoreState","firestore","role","picture","setUserState","users","user","interceptors","request","use","a","config","currentUser","getIdToken","idToken","error","Promise","reject","logout","push","Login","buttonDisabled","setButtonDisabled","credentialError","setCredentialError","emailVal","passwordVal","className","loginStyles","container","loginTextHeader","required","login","email","process","password","handleLoginButtonClick","Error404","AuthenticatedOnlyRoute","children","rest","isLoaded","isEmpty","render","to","UnAuthenticatedRoute","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","dispatch","useDispatch","firebase_FIREBASE","onAuthStateChanged","exact","path","component","initialState","reducer","action","combineReducers","authReducer","firebaseReducer","firestoreReducer","persistedState","serializedState","localStorage","getItem","parse","getFromLocalStorage","store","createStore","rootReducer","subscribe","setItem","setToLocalStorage","getState","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecdf3a99.chunk.js","sourcesContent":["const NavBar = ({userState, signOut}) => {\n    return (\n        <div>\n            <div>Hello, {userState.name}.</div>\n            <button onClick={signOut}>Sign Out</button>\n        </div>\n    )\n}\n\nexport default NavBar;\n","import {useRef, useState} from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\n\n\nconst AddEvent = ({setBodyState}) => {\n    const eventNameRef = useRef(\"\");\n    const [startDate, setStartDate] = useState(new Date());\n    // Newly added\n    const [loading, setLoading] = useState(false);\n    const [addEventStatus, setAddEventStatus] = useState(null);\n    const [networkStatus, setNetworkStatus] = useState(true);\n\n\n    const handleAddEventSubmission = (e) => {\n        e.preventDefault();\n\n        // newly added\n        const headerConfig = {\n            'Content-Type': 'application/JSON'\n        };\n        setLoading(true);\n\n        axios.post('/private/event/add',\n            JSON.stringify({startDate, eventName: eventNameRef.current.value}), {headers: headerConfig})\n            .then((res) => {\n                // newly added\n                setLoading(false);\n                if (res.status === 200) {\n                    setNetworkStatus(true);\n                    setAddEventStatus(true);\n                }\n                else {\n                    setNetworkStatus(true);\n                    setAddEventStatus(false);\n                }\n            })\n            .catch((err) => {\n                // newly added\n                setLoading(false);\n                setNetworkStatus(false);\n            });\n    }\n\n\n    return (\n        <div>\n            <div>\n                <input type=\"text\" ref={eventNameRef} placeholder={\"enter event name\"} />\n                <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n                {\n                    (loading) ? <div>Loading</div>:\n                    (networkStatus === false) ? <div>Sorry, Couldn't reach server.. !!</div>:\n                        (addEventStatus === true) ? <div>Event Added Successfully</div>:\n                            (addEventStatus === false) ? <div>Event not added, there were some issues.</div>:\n                                null\n                }\n                <button type={\"submit\"} onClick={handleAddEventSubmission}>Add</button>\n            </div>\n            <button onClick={() => setBodyState('root')}>Back</button>\n        </div>\n    );\n};\n\nexport default AddEvent;\n","import axios from \"axios\";\nimport FileDownload from 'js-file-download';\n\n\n\nconst Home = ({setBodyState}) => {\n\n    const downloadCsvTemplate = (templateName) => {\n        axios({\n            method: 'get',\n            url: `/private/csv-template/${templateName}`,\n            responseType: 'blob',\n        })\n            .then((response) => {\n                FileDownload(response.data, `${templateName}.csv`);\n            });\n    };\n\n\n    return (\n        <div>\n            <div>\n                <button onClick={() => downloadCsvTemplate(\"coordinators\")}>Download coordinators CSV Template</button>\n                <button onClick={() => downloadCsvTemplate(\"participants\")}>Download participants CSV Template</button>\n                <button onClick={() => downloadCsvTemplate(\"winners\")}>Download winners CSV Template</button>\n            </div>\n            <div>\n                <button onClick={() => setBodyState(\"eventAdd\")}>Add an Event</button>\n            </div>\n            <div>\n                <button onClick={() => setBodyState(\"sendCerts\")}>Mail Certificates</button>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Home;\n","const NetworkError = ({setBodyState}) => {\n    return (\n        <div>\n            <div>Sorry, Couldn't reach server !!</div>\n            <button onClick={() => setBodyState('root')}>Back</button>\n        </div>\n    )\n};\n\nexport default NetworkError;\n","import {useEffect, useState} from \"react\";\n\nconst SendingCerts = ({socket, setSendingCertsFlag, log}) => {\n\n\n    // useEffect(() => {\n    //     socket.on('log', (data) => {\n    //        setLog(data);\n    //     });\n    // });\n    return (\n        <div>\n            <div>Loading...</div>\n            <div>\n                {log}\n            </div>\n        </div>\n    );\n};\n\nexport default SendingCerts;\n","const ConfirmBox = ({event, formSubmitHandler, setConfirmBoxFlag}) => {\n    return (\n        <div>\n            <div>Are you sure you want to send ?</div>\n            <div onClick={() => formSubmitHandler(event)}>Yes, I'm sure</div>\n            <div onClick={() => setConfirmBoxFlag(false)}>Never mind</div>\n        </div>\n    );\n};\n\n\nexport default ConfirmBox\n","import {useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport SocketIOClient from 'socket.io-client';\nimport NetworkError from \"../../error/networkError\";\nimport SendingCerts from \"./sendingCerts\";\nimport ConfirmBox from \"./confirmBox\";\n\nconst execution_mode = process.env.REACT_APP_MODE;\n\n\nconst SendCerts = ({setBodyState}) => {\n    //  'https://acgam.herokuapp.com/'\n    // 'http://localhost:4000/'\n    const domain = 'https://acgam.herokuapp.com/';\n\n    const eventNameRef = useRef(null);\n    const templateRef = useRef(null);\n    const fileRef = useRef(null);\n    const [eventList, setEventList] = useState([]);\n    const [loading, setLoading] = useState(null);\n    const [fileError, setFileError] = useState(0);\n    const [submitDisabled, setSubmitDisabled] = useState(true);\n    const [resError, setResError] = useState(null);\n    const [resOkay, setResOkay] = useState(null);\n    const [loadEventsStatus, setLoadEventsStatus] = useState(true);\n    const [networkStatus, setNetworkStatus] = useState(true);\n    const [sendingCertsFlag, setSendingCertsFlag] = useState(false);\n    const [confirmBoxFlag, setConfirmBoxFlag] = useState(false);\n    const [formEvent, setFormEvent] = useState(null);\n    const [log, setLog] = useState(null);\n\n\n    /*\n    * fileError - 0 - No error at all\n    * fileError - 1 - File not added\n    * fileError - 2 - Unsupported file format\n    * fileError - 3 - File size larger than expected\n    * TODO: Add File size larger error\n    * */\n\n    useEffect(() => {\n        setLoading(true);\n        axios.get('private/event/fetch-all')\n            .then((res) => {\n                if (res.status === 200) {\n                    setEventList(res.data.reverse());\n                    setLoadEventsStatus(true);\n                    setLoading(false);\n                }\n                else {\n                    setLoadEventsStatus(false);\n                    setLoading(false);\n                }\n            })\n            .catch((err) => {\n                console.log(\"get error\")\n                setNetworkStatus(false);\n                setLoadEventsStatus(false);\n                setLoading(false);\n            })\n    }, []);\n\n    const submitClickHandler = (e) => {\n        e.preventDefault();\n        setFormEvent(e);\n        setConfirmBoxFlag(true);\n    };\n\n    const formSubmitHandler = (e) => {\n        e.preventDefault();\n        const socket = SocketIOClient(domain);\n        setSendingCertsFlag(true);\n        if (fileRef.current.files[0] === null) {\n            setFileError(1);\n            return;\n        }\n        setFileError(0)\n        const formData = new FormData();\n        formData.append('eventID', eventNameRef.current.value);\n        formData.append('templateName', templateRef.current.value);\n        formData.append('file', fileRef.current.files[0]);\n        setResError(null);\n        setResOkay(null);\n        socket.on(\"log\", (msg) => {\n            setLog(msg);\n        });\n        axios.post('/private/send', formData)\n            .then((res) => {\n                console.log(res.data)\n                switch (res.status) {\n                    case 200:\n                        if ([\"CSV File Poorly Formatted\", \"Certificate Template Not Found\"].includes(res.data)) {\n                            setResError(res.data);\n                            socket.disconnect();\n                            setSubmitDisabled(true);\n                            setConfirmBoxFlag(false);\n                            setSendingCertsFlag(false);\n                            break;\n                        }\n                        setResError(null);\n                        setResOkay(res.data);\n                        socket.disconnect();\n                        setSubmitDisabled(true);\n                        setConfirmBoxFlag(false);\n                        setSendingCertsFlag(false);\n                        break;\n                    case 500:\n                        setResError(res.data);\n                        setResOkay(null);\n                        socket.disconnect();\n                        setSubmitDisabled(true);\n                        setConfirmBoxFlag(false);\n                        setSendingCertsFlag(false);\n                        break;\n                    default:\n                        setResOkay(null);\n                        setResError(\"Some Unknown Issues Occurred\");\n                        socket.disconnect();\n                        setSubmitDisabled(true);\n                        setConfirmBoxFlag(false);\n                        setSendingCertsFlag(false);\n                        break;\n                }\n            })\n            .catch(err => {\n                socket.disconnect();\n                setResError(\"Couldn't connect to server...\");\n                setSubmitDisabled(true);\n                setConfirmBoxFlag(false);\n                setSendingCertsFlag(false);\n            });\n    }\n\n    const fileChangeHandler = () => {\n        setSubmitDisabled(false);\n        setFileError(0);\n        console.log(fileRef.current.files[0].type)\n        if (!['text/csv', 'text/comma-separated-values', 'application/csv'].includes(fileRef.current.files[0].type)) {\n            setSubmitDisabled(true);\n            setFileError(2);\n            fileRef.current.value = \"\";\n        }\n    }\n\n    return (\n        (loading) ? <div>Loading...</div>:\n            (!networkStatus) ? <NetworkError setBodyState={setBodyState} />:\n                (!loadEventsStatus) ? <div>Sorry, there was a problem while fetching events!!</div>:\n                    (sendingCertsFlag) ? <SendingCerts socket={null} setSendingCertsFlag={setSendingCertsFlag} log={log} />:\n                <div>\n                    <form onSubmit={submitClickHandler}>\n                        <label>\n                            Choose an event:\n                            <select ref={eventNameRef} name={\"eventName\"} disabled={loading}>\n                                {(eventList !== null) ? eventList.map((event) => <option key={event.id} value={event.id}>{event.eventName}</option>) : <option>loading</option>}\n                            </select>\n                        </label>\n                        <label>\n                            Choose a Template:\n                            <select ref={templateRef} name={\"templateName\"}>\n                                <option value={\"SB Template - Coordinators\"}>SB Template - Coordinators</option>\n                                <option value={\"SB Template - Participants\"}>SB Template - Participants</option>\n                                <option value={\"SB Template - Volunteers\"}>SB Template - Volunteers</option>\n                                <option value={\"SB Template - Winners\"}>SB Template - Winners</option>\n                                <option value={\"CS Template - Participants\"}>CS Template - Participants</option>\n                                <option value={\"CS Template - Winners\"}>CS Template - Winners</option>\n                                <option value={\"IAS Template - Participants\"}>IAS Template - Participants</option>\n                                <option value={\"IAS Template - Winners\"}>IAS Template - Winners</option>\n                                <option value={\"WIE Template - Participants\"}>WIE Template - Participants</option>\n                                <option value={\"WIE Template - Winners\"}>WIE Template - Winners</option>\n                            </select>\n                        </label>\n                        <label>\n                            <input type=\"file\" name={\"uploadedFile\"} ref={fileRef} onChange={fileChangeHandler} />\n                            <p>{fileError === 2 ? \"Unsupported file format\" : null}</p>\n                        </label>\n                        {<p>{resError}</p>}\n                        {<p>{resOkay}</p>}\n                        <input type=\"submit\" name={\"Send\"} disabled={submitDisabled} />\n                        {(confirmBoxFlag) ? <ConfirmBox setConfirmBoxFlag={setConfirmBoxFlag} event={formEvent} formSubmitHandler={formSubmitHandler}  />: null}\n                    </form>\n                    <button onClick={() => setBodyState('root')}>Back</button>\n                </div>\n    );\n};\n\nexport default SendCerts;\n","import {useState} from \"react\";\nimport AddEvent from \"./addEvent\";\nimport Home from \"./home\";\nimport SendCerts from \"./sendCerts\";\n\nconst Body = () => {\n    const [bodyState, setBodyState] = useState(\"root\");\n\n    return (\n        (bodyState === \"eventAdd\")?\n            <AddEvent setBodyState={setBodyState} />:\n            ((bodyState === \"root\")?\n                <Home setBodyState={setBodyState} />:\n                <SendCerts setBodyState={setBodyState} />)\n    );\n}\n\nexport default Body;\n","import {Redirect, useHistory} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {useFirebase, isLoaded, useFirestoreConnect, isEmpty,} from \"react-redux-firebase\";\nimport {useEffect, useState} from \"react\";\nimport axios from 'axios';\n\nimport NavBar from \"./navBar\";\nimport Body from \"./body/index\";\n\nconst CertGen = () => {\n    const auth = useSelector(state => state.firebase.auth);\n    useFirestoreConnect({\n        collection: 'users',\n        doc: auth.uid\n    })\n    const history = useHistory();\n    const firebase = useFirebase();\n    const firestoreState = useSelector(state => state.firestore)\n    const [userState, setUserState] = useState({\n        name: \"\",\n        role: \"\",\n        picture: \"\"\n    });\n\n\n    // TODO: Redirect to CertGen if null\n    useEffect(() => {\n        console.log(\"insiude useEffect\")\n        if (firestoreState) {\n            if (firestoreState.data) {\n                if (firestoreState.data.users) {\n                    if (firestoreState.data.users[auth.uid]) {\n                        const user = firestoreState.data.users[auth.uid];\n                        setUserState({\n                            name: user.name,\n                            role: user.role,\n                            picture: user.picture\n                        })\n                    }\n                }\n            }\n        }\n    }, [])\n\n    axios.interceptors.request.use(async config => {\n        config.headers.idToken = await firebase.auth().currentUser.getIdToken()\n        return config\n    }, (error) => {\n        return Promise.reject(error)\n    })\n\n\n    useFirestoreConnect({\n        collection: 'users',\n        doc: auth.uid\n    })\n\n\n    const signOut = () => {\n        firebase.logout()\n            .then(() => {\n                history.push('/login');\n            })\n            .catch((err) => {\n                //TODO: handle logout error\n            })\n    };\n\n\n    return (\n        <div>\n            <NavBar userState={userState} signOut={signOut} />\n            <Body />\n        </div>\n    );\n}\n\n\nexport default CertGen;\n","import CertGen from \"./certGen\";\n\n\nexport default () => {\n    return (\n        <CertGen />\n    );\n}\n","import loginStyles from \"./styles/loginStyles.module.css\";\nimport {useRef, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {useHistory} from 'react-router-dom';\nimport {useFirebase} from \"react-redux-firebase\";\nimport {isLoaded, isEmpty} from \"react-redux-firebase\";\n\n\nconst Login = () => {\n    const [buttonDisabled, setButtonDisabled] = useState(false);\n    const [credentialError, setCredentialError] = useState(null);\n    const emailVal = useRef(null);\n    const passwordVal = useRef(null);\n    const history = useHistory();\n    const firebase = useFirebase();\n\n    // TEST: delete it after use\n    const auth = useSelector(state => state.firebase.auth);\n\n\n    const verifyEmailAndPassword = () => {\n        if (emailVal.current.value === \"\" || passwordVal.current.value === \"\") {\n            setCredentialError(\"Please Enter Email and password\")\n            return 0;\n        }\n        return 1;\n    };\n\n\n    const handleLoginButtonClick = (e) => {\n        e.preventDefault();\n        setButtonDisabled(true);\n\n        // TEST\n        if (true || verifyEmailAndPassword()) {\n            firebase.login({email: process.env.REACT_APP_TEST_EMAIL, password: process.env.REACT_APP_TEST_PWORD})\n                .then((user) => {\n                    history.push('/');\n                })\n                .catch((err) => {\n                    setCredentialError(err);\n                    emailVal.current.value = \"\";\n                    passwordVal.current.value = \"\";\n                    setButtonDisabled(false);\n                });\n        }\n    };\n\n\n    return (\n        <div className={loginStyles.container}>\n            <div className={loginStyles.loginTextHeader}>Login</div>\n            <input type=\"text\" ref={emailVal} placeholder={'email'} required />\n            <input type=\"password\" ref={passwordVal} placeholder={'password'} required />\n            <div>{credentialError}</div>\n            <button disabled={buttonDisabled} onClick={(e) => handleLoginButtonClick(e)}>Log In</button>\n            {/*{isLoaded(auth)?<p>Auth is loaded</p>:<p>auth is not loaded</p>}*/}\n            {/*{!isEmpty(auth)?<p>User is authenticated</p>:<p>user is not authenticated</p>}*/}\n        </div>\n    );\n};\n\n\nexport default Login;\n","import Login from \"./login\";\n\nexport default () => {\n    return (\n        <Login />\n    );\n}\n","import errorStyles from \"./styles/errorStyles.module.css\";\n\nconst Error404 = () => {\n    return <div>\n        error 404 Not found\n    </div>\n}\n\n\nexport default Error404;\n","import {Redirect, Route} from \"react-router-dom\";\nimport {isLoaded, isEmpty} from \"react-redux-firebase\";\nimport {useSelector} from \"react-redux\";\n\n\n// TODO: Add isEmpty(auth) in the conditional statement\n\nexport const AuthenticatedOnlyRoute = ({children, ...rest}) => {\n    const auth = useSelector(state => state.firebase.auth);\n\n    console.log(isLoaded(auth)?\"Auth is loaded\":\"auth is not loaded\")\n    console.log(!isEmpty(auth)?\"User is authenticated\":\"user is not authenticated\");\n\n\n    return (\n        <Route {...rest}\n        render={() => {\n            if (isLoaded(auth)) {\n                console.log(\"reached here\")\n                if (isEmpty(auth)) return <Redirect to={'/login'} />\n                else return (children)\n            }\n            else {\n                return <div>loading</div>\n            }\n        }}\n        />\n    )\n};\n\nexport const UnAuthenticatedRoute = ({children, ...rest}) => {\n    const auth = useSelector(state => state.firebase.auth);\n\n    console.log(isLoaded(auth)?\"Auth is loaded\":\"auth is not loaded\")\n    console.log(!isEmpty(auth)?\"User is authenticated\":\"user is not authenticated\");\n\n\n    return (\n        <Route {...rest}\n               render={() => {\n                   if (isLoaded(auth)) {\n                       if (!isEmpty(auth)) return <Redirect to={'/'} />\n                       else return (children)\n                   }\n                   else {\n                       return <div>loading</div>\n                   }\n               }}\n        />\n    )\n};\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n\nfirebase.initializeApp({\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n});\n\n// export const user = app.user();\n// export const sql = app.firestore();\nfirebase.auth();\nfirebase.firestore();\n\n\nexport default firebase;\n","import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport CertGen from \"./components/home\";\nimport Login from \"./components/login\";\nimport Error404 from \"./components/error/Error404\";\nimport {AuthenticatedOnlyRoute, UnAuthenticatedRoute} from \"./PrivateRoutes\";\nimport {useEffect} from \"react\";\nimport firebase_FIREBASE from \"./firebase\";\nimport {useDispatch} from \"react-redux\";\nimport SendCerts from \"./components/home/body/sendCerts\";\n\n\nfunction App () {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        firebase_FIREBASE.auth().onAuthStateChanged((user) => {\n            dispatch({type: 'SET_UID', uid: (user)?user.uid:null});\n        })\n    }, []);\n\n\n    return (\n        <Router>\n            <Switch>\n                {/*<Route exact path={'/'} component={CertGen} />*/}\n                <AuthenticatedOnlyRoute exact path={\"/\"}>\n                    <Route component={CertGen} />\n                </AuthenticatedOnlyRoute>\n                {/*<AuthenticatedOnlyRoute exact path={\"/send-certs\"}>*/}\n                {/*    <Route component={SendCerts} />*/}\n                {/*</AuthenticatedOnlyRoute>*/}\n                {/*<AuthenticatedOnlyRoute exact path={\"/\"}>*/}\n                {/*    <Route component={CertGen} />*/}\n                {/*</AuthenticatedOnlyRoute>*/}\n                {/*<Route path={\"/login\"} component={Login} />*/}\n                <UnAuthenticatedRoute path={\"/login\"}>\n                    <Route component={Login} />\n                </UnAuthenticatedRoute>\n                <Route component={Error404} />\n            </Switch>\n        </Router>\n    );\n}\n\n\nexport default App;\n","const initialState = {\n    uid: null,\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case 'SET_UID':\n            return {\n                ...state,\n                uid: action.uid,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default reducer;\n","import {combineReducers} from 'redux';\nimport {firebaseReducer} from \"react-redux-firebase\";\nimport {firestoreReducer} from \"redux-firestore\";\nimport authReducer from \"./auth/reducer\";\n\nexport default combineReducers({\n   auth: authReducer,\n   firebase: firebaseReducer,\n   firestore: firestoreReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport rootReducer from \"./store/rootReducer\";\nimport {createFirestoreInstance} from \"redux-firestore\";\nimport {ReactReduxFirebaseProvider} from \"react-redux-firebase\";\nimport firebase  from \"./firebase\";\nimport {setToLocalStorage, getFromLocalStorage} from \"./store/persistenceFuncs\";\n\n\nconst rrfConfig = {\n    userProfile: \"users\",\n    useFirestoreForProfile: true,\n};\n\n\nconst persistedState = getFromLocalStorage();\nconst store = createStore(rootReducer, persistedState);\n\nstore.subscribe(() => setToLocalStorage(store.getState()));\n\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n};\n\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <React.StrictMode>\n                    <App />\n                </React.StrictMode>\n            </ReactReduxFirebaseProvider>\n    </Provider>,\n  document.getElementById('root')\n);\n","export const setToLocalStorage = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState)\n        return state;\n    } catch (err) {\n        // TODO: Handle this\n    }\n}\n\nexport const getFromLocalStorage = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) return undefined;\n        return JSON.parse(serializedState);\n    } catch (err) {\n        // TODO: Handle this\n    }\n}\n"],"sourceRoot":""}